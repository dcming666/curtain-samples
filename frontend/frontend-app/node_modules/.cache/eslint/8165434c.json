[{"C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\App.vue":"1","C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\router\\index.js":"2","C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\views\\CategoryList.vue":"3","C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\views\\CurtainDetail.vue":"4","C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\views\\admin\\CurtainManage.vue":"5","C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\views\\Home.vue":"6","C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\views\\admin\\Login.vue":"7","C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\views\\admin\\Admin.vue":"8","C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\stores\\index.js":"9"},{"size":331,"mtime":1741069375739,"results":"10","hashOfConfig":"11"},{"size":2096,"mtime":1741069375747,"results":"12","hashOfConfig":"11"},{"size":4357,"mtime":1741069375750,"results":"13","hashOfConfig":"11"},{"size":6192,"mtime":1741069375753,"results":"14","hashOfConfig":"11"},{"size":15623,"mtime":1741069375757,"results":"15","hashOfConfig":"11"},{"size":4576,"mtime":1741069375754,"results":"16","hashOfConfig":"11"},{"size":3995,"mtime":1741069375759,"results":"17","hashOfConfig":"11"},{"size":3327,"mtime":1741069375756,"results":"18","hashOfConfig":"11"},{"size":1747,"mtime":1741070065570,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wxafh7",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\App.vue",[],"C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\router\\index.js",[],"C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\views\\CategoryList.vue",["41"],"<template>\r\n  <div class=\"category-container\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"24\">\r\n        <div class=\"page-header\">\r\n          <h1 v-if=\"currentCategory\">{{ currentCategory.name }}</h1>\r\n          <h1 v-else>分类浏览</h1>\r\n          <el-button @click=\"goBack\" icon=\"el-icon-arrow-left\">返回首页</el-button>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n    \r\n    <!-- 加载状态 -->\r\n    <div v-if=\"curtainStore.loading\" class=\"loading-container\">\r\n      <el-skeleton :rows=\"5\" animated />\r\n    </div>\r\n    \r\n    <!-- 错误信息 -->\r\n    <div v-else-if=\"curtainStore.error\" class=\"error-message\">\r\n      <el-alert :title=\"curtainStore.error\" type=\"error\" show-icon />\r\n    </div>\r\n    \r\n    <!-- 窗帘样本列表 -->\r\n    <div v-else>\r\n      <div v-if=\"curtainStore.curtains.length === 0\" class=\"empty-state\">\r\n        <el-empty description=\"该分类下暂无窗帘样本\" />\r\n      </div>\r\n      <div v-else class=\"curtain-grid\">\r\n        <el-card \r\n          v-for=\"curtain in curtainStore.curtains\" \r\n          :key=\"curtain.id\"\r\n          class=\"curtain-card\"\r\n          :body-style=\"{ padding: '0px' }\"\r\n          shadow=\"hover\"\r\n          @click=\"navigateToCurtain(curtain.id)\"\r\n        >\r\n          <img :src=\"curtain.image_url\" class=\"curtain-image\">\r\n          <div class=\"curtain-info\">\r\n            <h3>{{ curtain.name }}</h3>\r\n            <p>{{ curtain.description }}</p>\r\n            <div class=\"curtain-tags\">\r\n              <el-tag size=\"small\" type=\"success\" v-if=\"curtain.in_stock\">有库存</el-tag>\r\n              <el-tag size=\"small\" type=\"danger\" v-else>缺货</el-tag>\r\n              <el-tag size=\"small\" type=\"warning\" v-if=\"curtain.is_new\">新品</el-tag>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { useCurtainStore } from '../stores'\r\n\r\nexport default {\r\n  name: 'CategoryList',\r\n  setup() {\r\n    const route = useRoute()\r\n    const router = useRouter()\r\n    const curtainStore = useCurtainStore()\r\n    \r\n    // 当前分类ID\r\n    const categoryId = computed(() => route.params.id)\r\n    \r\n    // 当前分类信息\r\n    const currentCategory = computed(() => {\r\n      if (!categoryId.value || !curtainStore.categories.length) return null\r\n      return curtainStore.categories.find(c => c.id == categoryId.value) || null\r\n    })\r\n    \r\n    onMounted(async () => {\r\n      // 获取分类列表（如果尚未加载）\r\n      if (!curtainStore.categories.length) {\r\n        await curtainStore.fetchCategories()\r\n      }\r\n      \r\n      // 获取当前分类下的窗帘样本\r\n      if (categoryId.value) {\r\n        await curtainStore.fetchCurtainsByCategory(categoryId.value)\r\n      }\r\n    })\r\n    \r\n    const navigateToCurtain = (curtainId) => {\r\n      router.push({ name: 'CurtainDetail', params: { id: curtainId } })\r\n    }\r\n    \r\n    const goBack = () => {\r\n      router.push({ name: 'Home' })\r\n    }\r\n    \r\n    return {\r\n      curtainStore,\r\n      currentCategory,\r\n      navigateToCurtain,\r\n      goBack\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.category-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.page-header h1 {\r\n  font-size: 2rem;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n}\r\n\r\n.curtain-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.curtain-card {\r\n  cursor: pointer;\r\n  transition: transform 0.3s;\r\n}\r\n\r\n.curtain-card:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.curtain-image {\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n}\r\n\r\n.curtain-info {\r\n  padding: 15px;\r\n}\r\n\r\n.curtain-info h3 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.curtain-info p {\r\n  margin: 0 0 10px 0;\r\n  color: #7f8c8d;\r\n  font-size: 0.9rem;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n.curtain-tags {\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n\r\n.loading-container {\r\n  padding: 20px;\r\n}\r\n\r\n.error-message {\r\n  margin: 20px 0;\r\n}\r\n\r\n.empty-state {\r\n  padding: 40px 0;\r\n  text-align: center;\r\n}\r\n</style>","C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\views\\CurtainDetail.vue",[],"C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\views\\admin\\CurtainManage.vue",["42"],"<template>\r\n  <div class=\"curtain-manage-container\">\r\n    <div class=\"page-header\">\r\n      <h2>窗帘样本管理</h2>\r\n      <el-button type=\"primary\" @click=\"showAddDialog\">添加新样本</el-button>\r\n    </div>\r\n    \r\n    <!-- 搜索和筛选区域 -->\r\n    <el-card class=\"filter-card\">\r\n      <el-form :inline=\"true\" :model=\"filterForm\" class=\"filter-form\">\r\n        <el-form-item label=\"样本名称\">\r\n          <el-input v-model=\"filterForm.name\" placeholder=\"输入名称关键词\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\">\r\n          <el-select v-model=\"filterForm.category_id\" placeholder=\"选择分类\" clearable>\r\n            <el-option \r\n              v-for=\"category in curtainStore.categories\" \r\n              :key=\"category.id\" \r\n              :label=\"category.name\" \r\n              :value=\"category.id\" \r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"库存状态\">\r\n          <el-select v-model=\"filterForm.in_stock\" placeholder=\"库存状态\" clearable>\r\n            <el-option label=\"有库存\" :value=\"true\" />\r\n            <el-option label=\"缺货\" :value=\"false\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleFilter\">搜索</el-button>\r\n          <el-button @click=\"resetFilter\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n    \r\n    <!-- 数据表格 -->\r\n    <el-card class=\"table-card\">\r\n      <div v-if=\"curtainStore.loading\" class=\"loading-container\">\r\n        <el-skeleton :rows=\"10\" animated />\r\n      </div>\r\n      <div v-else-if=\"curtainStore.error\" class=\"error-message\">\r\n        <el-alert :title=\"curtainStore.error\" type=\"error\" show-icon />\r\n      </div>\r\n      <div v-else>\r\n        <el-table \r\n          :data=\"curtainStore.curtains\" \r\n          border \r\n          style=\"width: 100%\"\r\n          v-loading=\"tableLoading\"\r\n        >\r\n          <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n          <el-table-column label=\"图片\" width=\"120\">\r\n            <template #default=\"{row}\">\r\n              <el-image \r\n                :src=\"row.image_url\" \r\n                style=\"width: 80px; height: 80px\"\r\n                fit=\"cover\"\r\n                :preview-src-list=\"[row.image_url]\"\r\n              >\r\n                <template #error>\r\n                  <div class=\"image-error\">\r\n                    <el-icon><picture-failed /></el-icon>\r\n                  </div>\r\n                </template>\r\n              </el-image>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"name\" label=\"名称\" />\r\n          <el-table-column prop=\"category_name\" label=\"分类\" width=\"120\" />\r\n          <el-table-column label=\"库存状态\" width=\"100\">\r\n            <template #default=\"{row}\">\r\n              <el-tag :type=\"row.in_stock ? 'success' : 'danger'\">\r\n                {{ row.in_stock ? '有库存' : '缺货' }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"新品\" width=\"80\">\r\n            <template #default=\"{row}\">\r\n              <el-tag v-if=\"row.is_new\" type=\"warning\">新品</el-tag>\r\n              <span v-else>-</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" width=\"200\">\r\n            <template #default=\"{row}\">\r\n              <el-button size=\"small\" @click=\"showEditDialog(row)\">编辑</el-button>\r\n              <el-popconfirm \r\n                title=\"确定要删除这个窗帘样本吗？\" \r\n                @confirm=\"handleDelete(row.id)\"\r\n              >\r\n                <template #reference>\r\n                  <el-button size=\"small\" type=\"danger\">删除</el-button>\r\n                </template>\r\n              </el-popconfirm>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </el-card>\r\n    \r\n    <!-- 添加/编辑对话框 -->\r\n    <el-dialog \r\n      :title=\"dialogType === 'add' ? '添加窗帘样本' : '编辑窗帘样本'\" \r\n      v-model=\"dialogVisible\"\r\n      width=\"600px\"\r\n    >\r\n      <el-form \r\n        ref=\"curtainFormRef\" \r\n        :model=\"curtainForm\" \r\n        :rules=\"curtainRules\" \r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"样本名称\" prop=\"name\">\r\n          <el-input v-model=\"curtainForm.name\" placeholder=\"请输入窗帘样本名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\" prop=\"category_id\">\r\n          <el-select v-model=\"curtainForm.category_id\" placeholder=\"请选择分类\">\r\n            <el-option \r\n              v-for=\"category in curtainStore.categories\" \r\n              :key=\"category.id\" \r\n              :label=\"category.name\" \r\n              :value=\"category.id\" \r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"样本图片\" prop=\"image\">\r\n          <el-upload\r\n            class=\"image-upload\"\r\n            action=\"#\"\r\n            :http-request=\"handleImageUpload\"\r\n            :show-file-list=\"false\"\r\n            :before-upload=\"beforeImageUpload\"\r\n          >\r\n            <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"preview-image\" />\r\n            <el-icon v-else class=\"upload-icon\"><plus /></el-icon>\r\n            <div class=\"upload-text\">点击上传图片</div>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\" prop=\"price\">\r\n          <el-input-number v-model=\"curtainForm.price\" :precision=\"2\" :step=\"10\" :min=\"0\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"材质\" prop=\"material\">\r\n          <el-input v-model=\"curtainForm.material\" placeholder=\"请输入窗帘材质\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"宽度\" prop=\"width\">\r\n          <el-input v-model=\"curtainForm.width\" placeholder=\"请输入窗帘宽度\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"图案\" prop=\"pattern\">\r\n          <el-input v-model=\"curtainForm.pattern\" placeholder=\"请输入窗帘图案\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"风格\" prop=\"style\">\r\n          <el-input v-model=\"curtainForm.style\" placeholder=\"请输入窗帘风格\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"功能\" prop=\"features\">\r\n          <el-input v-model=\"curtainForm.features\" placeholder=\"请输入窗帘功能特点\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\" prop=\"description\">\r\n          <el-input \r\n            v-model=\"curtainForm.description\" \r\n            type=\"textarea\" \r\n            :rows=\"4\" \r\n            placeholder=\"请输入窗帘样本描述\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"库存状态\" prop=\"in_stock\">\r\n          <el-switch v-model=\"curtainForm.in_stock\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"新品\" prop=\"is_new\">\r\n          <el-switch v-model=\"curtainForm.is_new\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitLoading\">确定</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, computed } from 'vue'\r\nimport { useCurtainStore } from '../../stores'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'CurtainManage',\r\n  setup() {\r\n    const curtainStore = useCurtainStore()\r\n    const curtainFormRef = ref(null)\r\n    const dialogVisible = ref(false)\r\n    const dialogType = ref('add') // 'add' 或 'edit'\r\n    const submitLoading = ref(false)\r\n    const tableLoading = ref(false)\r\n    const imageUrl = ref('')\r\n    const imageFile = ref(null)\r\n    \r\n    // 筛选表单\r\n    const filterForm = reactive({\r\n      name: '',\r\n      category_id: '',\r\n      in_stock: ''\r\n    })\r\n    \r\n    // 窗帘样本表单\r\n    const curtainForm = reactive({\r\n      id: null,\r\n      name: '',\r\n      category_id: '',\r\n      price: 0,\r\n      material: '',\r\n      width: '',\r\n      pattern: '',\r\n      style: '',\r\n      features: '',\r\n      description: '',\r\n      in_stock: true,\r\n      is_new: false\r\n    })\r\n    \r\n    // 表单验证规则\r\n    const curtainRules = {\r\n      name: [\r\n        { required: true, message: '请输入窗帘样本名称', trigger: 'blur' },\r\n        { min: 2, max: 50, message: '长度应为2-50个字符', trigger: 'blur' }\r\n      ],\r\n      category_id: [\r\n        { required: true, message: '请选择分类', trigger: 'change' }\r\n      ],\r\n      description: [\r\n        { required: true, message: '请输入窗帘样本描述', trigger: 'blur' }\r\n      ]\r\n    }\r\n    \r\n    // 初始化数据\r\n    onMounted(async () => {\r\n      // 获取分类列表\r\n      if (!curtainStore.categories.length) {\r\n        await curtainStore.fetchCategories()\r\n      }\r\n      // 获取窗帘样本列表\r\n      await curtainStore.fetchCurtains()\r\n    })\r\n    \r\n    // 显示添加对话框\r\n    const showAddDialog = () => {\r\n      dialogType.value = 'add'\r\n      resetForm()\r\n      dialogVisible.value = true\r\n    }\r\n    \r\n    // 显示编辑对话框\r\n    const showEditDialog = (row) => {\r\n      dialogType.value = 'edit'\r\n      resetForm()\r\n      \r\n      // 填充表单数据\r\n      Object.keys(curtainForm).forEach(key => {\r\n        if (key in row) {\r\n          curtainForm[key] = row[key]\r\n        }\r\n      })\r\n      \r\n      // 设置图片预览\r\n      if (row.image_url) {\r\n        imageUrl.value = row.image_url\r\n      }\r\n      \r\n      dialogVisible.value = true\r\n    }\r\n    \r\n    // 重置表单\r\n    const resetForm = () => {\r\n      if (curtainFormRef.value) {\r\n        curtainFormRef.value.resetFields()\r\n      }\r\n      \r\n      // 重置表单数据\r\n      Object.assign(curtainForm, {\r\n        id: null,\r\n        name: '',\r\n        category_id: '',\r\n        price: 0,\r\n        material: '',\r\n        width: '',\r\n        pattern: '',\r\n        style: '',\r\n        features: '',\r\n        description: '',\r\n        in_stock: true,\r\n        is_new: false\r\n      })\r\n      \r\n      // 清除图片\r\n      imageUrl.value = ''\r\n      imageFile.value = null\r\n    }\r\n    \r\n    // 图片上传前的验证\r\n    const beforeImageUpload = (file) => {\r\n      const isImage = file.type.startsWith('image/')\r\n      const isLt2M = file.size / 1024 / 1024 < 2\r\n      \r\n      if (!isImage) {\r\n        ElMessage.error('只能上传图片文件!')\r\n        return false\r\n      }\r\n      if (!isLt2M) {\r\n        ElMessage.error('图片大小不能超过2MB!')\r\n        return false\r\n      }\r\n      \r\n      return true\r\n    }\r\n    \r\n    // 处理图片上传\r\n    const handleImageUpload = (options) => {\r\n      const file = options.file\r\n      imageFile.value = file\r\n      \r\n      // 创建本地预览URL\r\n      const reader = new FileReader()\r\n      reader.onload = (e) => {\r\n        imageUrl.value = e.target.result\r\n      }\r\n      reader.readAsDataURL(file)\r\n    }\r\n    \r\n    // 提交表单\r\n    const handleSubmit = async () => {\r\n      if (!curtainFormRef.value) return\r\n      \r\n      await curtainFormRef.value.validate(async (valid) => {\r\n        if (valid) {\r\n          submitLoading.value = true\r\n          \r\n          try {\r\n            // 创建FormData对象\r\n            const formData = new FormData()\r\n            \r\n            // 添加表单字段\r\n            Object.keys(curtainForm).forEach(key => {\r\n              if (key !== 'id') {\r\n                formData.append(key, curtainForm[key])\r\n              }\r\n            })\r\n            \r\n            // 添加图片文件（如果有）\r\n            if (imageFile.value) {\r\n              formData.append('image', imageFile.value)\r\n            }\r\n            \r\n            // 根据对话框类型执行添加或更新操作\r\n            if (dialogType.value === 'add') {\r\n              await curtainStore.addCurtain(formData)\r\n              ElMessage.success('添加窗帘样本成功')\r\n            } else {\r\n              await curtainStore.updateCurtain(curtainForm.id, formData)\r\n              ElMessage.success('更新窗帘样本成功')\r\n            }\r\n            \r\n            // 关闭对话框并重置表单\r\n            dialogVisible.value = false\r\n            resetForm()\r\n          } catch (error) {\r\n            ElMessage.error(error.message || '操作失败')\r\n          } finally {\r\n            submitLoading.value = false\r\n          }\r\n        }\r\n      })\r\n    }\r\n    \r\n    // 处理删除\r\n    const handleDelete = async (id) => {\r\n      try {\r\n        tableLoading.value = true\r\n        await curtainStore.deleteCurtain(id)\r\n        ElMessage.success('删除窗帘样本成功')\r\n      } catch (error) {\r\n        ElMessage.error(error.message || '删除失败')\r\n      } finally {\r\n        tableLoading.value = false\r\n      }\r\n    }\r\n    \r\n    // 处理筛选\r\n    const handleFilter = async () => {\r\n      // 这里简化处理，实际应该调用API进行筛选\r\n      // 在真实环境中，应该将筛选条件传递给后端API\r\n      tableLoading.value = true\r\n      try {\r\n        await curtainStore.fetchCurtains()\r\n        // 前端筛选（临时方案）\r\n        if (filterForm.name) {\r\n          curtainStore.curtains = curtainStore.curtains.filter(item => \r\n            item.name.toLowerCase().includes(filterForm.name.toLowerCase())\r\n          )\r\n        }\r\n        if (filterForm.category_id) {\r\n          curtainStore.curtains = curtainStore.curtains.filter(item => \r\n            item.category_id === filterForm.category_id\r\n          )\r\n        }\r\n        if (filterForm.in_stock !== '') {\r\n          curtainStore.curtains = curtainStore.curtains.filter(item => \r\n            item.in_stock === filterForm.in_stock\r\n          )\r\n        }\r\n      } catch (error) {\r\n        ElMessage.error('筛选失败: ' + error.message)\r\n      } finally {\r\n        tableLoading.value = false\r\n      }\r\n    }\r\n    \r\n    // 重置筛选\r\n    const resetFilter = () => {\r\n      Object.assign(filterForm, {\r\n        name: '',\r\n        category_id: '',\r\n        in_stock: ''\r\n      })\r\n      curtainStore.fetchCurtains()\r\n    }\r\n    \r\n    return {\r\n      curtainStore,\r\n      curtainForm,\r\n      curtainRules,\r\n      curtainFormRef,\r\n      dialogVisible,\r\n      dialogType,\r\n      submitLoading,\r\n      tableLoading,\r\n      imageUrl,\r\n      filterForm,\r\n      showAddDialog,\r\n      showEditDialog,\r\n      handleSubmit,\r\n      handleDelete,\r\n      handleFilter,\r\n      resetFilter,\r\n      beforeImageUpload,\r\n      handleImageUpload\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.curtain-manage-container {\r\n  padding: 20px;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-form {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.table-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.image-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 178px;\r\n  height: 178px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.image-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.preview-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.upload-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n}\r\n\r\n.upload-text {\r\n  color: #8c939d;\r\n  font-size: 14px;\r\n  margin-top: 8px;\r\n}\r\n\r\n.image-error {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  color: #909399;\r\n}\r\n</style>","C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\views\\Home.vue",["43"],"<template>\r\n  <div class=\"home-container\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"24\">\r\n        <div class=\"page-header\">\r\n          <h1>窗帘样本展示</h1>\r\n          <p>浏览我们的精选窗帘样本，为您的家居空间增添美感</p>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n    \r\n    <!-- 分类导航 -->\r\n    <el-row :gutter=\"20\" class=\"category-nav\">\r\n      <el-col :span=\"24\">\r\n        <h2>窗帘分类</h2>\r\n        <div v-if=\"curtainStore.loading\" class=\"loading-container\">\r\n          <el-skeleton :rows=\"3\" animated />\r\n        </div>\r\n        <div v-else-if=\"curtainStore.error\" class=\"error-message\">\r\n          <el-alert :title=\"curtainStore.error\" type=\"error\" show-icon />\r\n        </div>\r\n        <div v-else class=\"category-list\">\r\n          <el-button \r\n            v-for=\"category in curtainStore.categories\" \r\n            :key=\"category.id\"\r\n            type=\"primary\"\r\n            plain\r\n            @click=\"navigateToCategory(category.id)\"\r\n          >\r\n            {{ category.name }}\r\n          </el-button>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n    \r\n    <!-- 最新样本展示 -->\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"24\">\r\n        <h2>最新样本</h2>\r\n        <div v-if=\"curtainStore.loading\" class=\"loading-container\">\r\n          <el-skeleton :rows=\"5\" animated />\r\n        </div>\r\n        <div v-else-if=\"curtainStore.error\" class=\"error-message\">\r\n          <el-alert :title=\"curtainStore.error\" type=\"error\" show-icon />\r\n        </div>\r\n        <div v-else class=\"curtain-grid\">\r\n          <el-card \r\n            v-for=\"curtain in curtainStore.curtains\" \r\n            :key=\"curtain.id\"\r\n            class=\"curtain-card\"\r\n            :body-style=\"{ padding: '0px' }\"\r\n            shadow=\"hover\"\r\n            @click=\"navigateToCurtain(curtain.id)\"\r\n          >\r\n            <img :src=\"curtain.image_url\" class=\"curtain-image\">\r\n            <div class=\"curtain-info\">\r\n              <h3>{{ curtain.name }}</h3>\r\n              <p>{{ curtain.description }}</p>\r\n              <div class=\"curtain-tags\">\r\n                <el-tag size=\"small\" type=\"info\">{{ curtain.category_name }}</el-tag>\r\n                <el-tag size=\"small\" type=\"success\" v-if=\"curtain.in_stock\">有库存</el-tag>\r\n                <el-tag size=\"small\" type=\"danger\" v-else>缺货</el-tag>\r\n              </div>\r\n            </div>\r\n          </el-card>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { useCurtainStore } from '../stores'\r\n\r\nexport default {\r\n  name: 'Home',\r\n  setup() {\r\n    const router = useRouter()\r\n    const curtainStore = useCurtainStore()\r\n    \r\n    onMounted(async () => {\r\n      // 获取分类列表\r\n      await curtainStore.fetchCategories()\r\n      // 获取窗帘样本列表\r\n      await curtainStore.fetchCurtains()\r\n    })\r\n    \r\n    const navigateToCategory = (categoryId) => {\r\n      router.push({ name: 'CategoryList', params: { id: categoryId } })\r\n    }\r\n    \r\n    const navigateToCurtain = (curtainId) => {\r\n      router.push({ name: 'CurtainDetail', params: { id: curtainId } })\r\n    }\r\n    \r\n    return {\r\n      curtainStore,\r\n      navigateToCategory,\r\n      navigateToCurtain\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.home-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.page-header {\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.page-header h1 {\r\n  font-size: 2.5rem;\r\n  color: #2c3e50;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.page-header p {\r\n  font-size: 1.2rem;\r\n  color: #7f8c8d;\r\n}\r\n\r\n.category-nav {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.category-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.curtain-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.curtain-card {\r\n  cursor: pointer;\r\n  transition: transform 0.3s;\r\n}\r\n\r\n.curtain-card:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.curtain-image {\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n}\r\n\r\n.curtain-info {\r\n  padding: 15px;\r\n}\r\n\r\n.curtain-info h3 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.curtain-info p {\r\n  margin: 0 0 10px 0;\r\n  color: #7f8c8d;\r\n  font-size: 0.9rem;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n.curtain-tags {\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n\r\n.loading-container {\r\n  padding: 20px;\r\n}\r\n\r\n.error-message {\r\n  margin: 20px 0;\r\n}\r\n</style>","C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\views\\admin\\Login.vue",[],"C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\views\\admin\\Admin.vue",[],"C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\stores\\index.js",[],{"ruleId":"44","severity":1,"message":"45","line":54,"column":10,"nodeType":"46","messageId":"47","endLine":54,"endColumn":13},{"ruleId":"44","severity":1,"message":"48","line":181,"column":36,"nodeType":"46","messageId":"47","endLine":181,"endColumn":44},{"ruleId":"44","severity":1,"message":"45","line":73,"column":10,"nodeType":"46","messageId":"47","endLine":73,"endColumn":13},"no-unused-vars","'ref' is defined but never used.","Identifier","unusedVar","'computed' is defined but never used."]