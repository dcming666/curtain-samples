{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\n\n// 导入页面组件\nconst Home = () => import('../views/Home.vue');\nconst CurtainDetail = () => import('../views/CurtainDetail.vue');\nconst CategoryList = () => import('../views/CategoryList.vue');\nconst Admin = () => import('../views/admin/Admin.vue');\nconst Login = () => import('../views/admin/Login.vue');\nconst CurtainManage = () => import('../views/admin/CurtainManage.vue');\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home,\n  meta: {\n    title: '首页 - 窗帘样本展示'\n  }\n}, {\n  path: '/category/:id',\n  name: 'CategoryList',\n  component: CategoryList,\n  meta: {\n    title: '分类浏览 - 窗帘样本展示'\n  }\n}, {\n  path: '/curtain/:id',\n  name: 'CurtainDetail',\n  component: CurtainDetail,\n  meta: {\n    title: '样本详情 - 窗帘样本展示'\n  }\n}, {\n  path: '/admin/login',\n  name: 'Login',\n  component: Login,\n  meta: {\n    title: '管理员登录'\n  }\n}, {\n  path: '/admin',\n  name: 'Admin',\n  component: Admin,\n  meta: {\n    title: '后台管理',\n    requiresAuth: true\n  },\n  children: [{\n    path: 'curtains',\n    name: 'CurtainManage',\n    component: CurtainManage,\n    meta: {\n      title: '窗帘样本管理',\n      requiresAuth: true\n    }\n  }]\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// 全局路由守卫，处理页面标题和身份验证\nrouter.beforeEach((to, from, next) => {\n  // 设置页面标题\n  if (to.meta.title) {\n    document.title = to.meta.title;\n  }\n\n  // 检查是否需要身份验证\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    // 检查用户是否已登录\n    const isLoggedIn = localStorage.getItem('admin_token');\n    if (!isLoggedIn) {\n      // 如果没有登录，重定向到登录页面\n      next({\n        name: 'Login'\n      });\n    } else {\n      next(); // 已登录，继续导航\n    }\n  } else {\n    next(); // 不需要身份验证，继续导航\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","CurtainDetail","CategoryList","Admin","Login","CurtainManage","routes","path","name","component","meta","title","requiresAuth","children","router","history","beforeEach","to","from","next","document","matched","some","record","isLoggedIn","localStorage","getItem"],"sources":["C:/Users/Firebat/Desktop/curtain/frontend/frontend-app/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\n\r\n// 导入页面组件\r\nconst Home = () => import('../views/Home.vue')\r\nconst CurtainDetail = () => import('../views/CurtainDetail.vue')\r\nconst CategoryList = () => import('../views/CategoryList.vue')\r\nconst Admin = () => import('../views/admin/Admin.vue')\r\nconst Login = () => import('../views/admin/Login.vue')\r\nconst CurtainManage = () => import('../views/admin/CurtainManage.vue')\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: Home,\r\n    meta: { title: '首页 - 窗帘样本展示' }\r\n  },\r\n  {\r\n    path: '/category/:id',\r\n    name: 'CategoryList',\r\n    component: CategoryList,\r\n    meta: { title: '分类浏览 - 窗帘样本展示' }\r\n  },\r\n  {\r\n    path: '/curtain/:id',\r\n    name: 'CurtainDetail',\r\n    component: CurtainDetail,\r\n    meta: { title: '样本详情 - 窗帘样本展示' }\r\n  },\r\n  {\r\n    path: '/admin/login',\r\n    name: 'Login',\r\n    component: Login,\r\n    meta: { title: '管理员登录' }\r\n  },\r\n  {\r\n    path: '/admin',\r\n    name: 'Admin',\r\n    component: Admin,\r\n    meta: { title: '后台管理', requiresAuth: true },\r\n    children: [\r\n      {\r\n        path: 'curtains',\r\n        name: 'CurtainManage',\r\n        component: CurtainManage,\r\n        meta: { title: '窗帘样本管理', requiresAuth: true }\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n})\r\n\r\n// 全局路由守卫，处理页面标题和身份验证\r\nrouter.beforeEach((to, from, next) => {\r\n  // 设置页面标题\r\n  if (to.meta.title) {\r\n    document.title = to.meta.title\r\n  }\r\n  \r\n  // 检查是否需要身份验证\r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    // 检查用户是否已登录\r\n    const isLoggedIn = localStorage.getItem('admin_token')\r\n    if (!isLoggedIn) {\r\n      // 如果没有登录，重定向到登录页面\r\n      next({ name: 'Login' })\r\n    } else {\r\n      next() // 已登录，继续导航\r\n    }\r\n  } else {\r\n    next() // 不需要身份验证，继续导航\r\n  }\r\n})\r\n\r\nexport default router"],"mappings":";;AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;;AAE3D;AACA,MAAMC,IAAI,GAAGA,CAAA,KAAM,MAAM,CAAC,mBAAmB,CAAC;AAC9C,MAAMC,aAAa,GAAGA,CAAA,KAAM,MAAM,CAAC,4BAA4B,CAAC;AAChE,MAAMC,YAAY,GAAGA,CAAA,KAAM,MAAM,CAAC,2BAA2B,CAAC;AAC9D,MAAMC,KAAK,GAAGA,CAAA,KAAM,MAAM,CAAC,0BAA0B,CAAC;AACtD,MAAMC,KAAK,GAAGA,CAAA,KAAM,MAAM,CAAC,0BAA0B,CAAC;AACtD,MAAMC,aAAa,GAAGA,CAAA,KAAM,MAAM,CAAC,kCAAkC,CAAC;AAEtE,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAET,IAAI;EACfU,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAc;AAC/B,CAAC,EACD;EACEJ,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,cAAc;EACpBC,SAAS,EAAEP,YAAY;EACvBQ,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAgB;AACjC,CAAC,EACD;EACEJ,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAER,aAAa;EACxBS,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAgB;AACjC,CAAC,EACD;EACEJ,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEL,KAAK;EAChBM,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAQ;AACzB,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN,KAAK;EAChBO,IAAI,EAAE;IAAEC,KAAK,EAAE,MAAM;IAAEC,YAAY,EAAE;EAAK,CAAC;EAC3CC,QAAQ,EAAE,CACR;IACEN,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,eAAe;IACrBC,SAAS,EAAEJ,aAAa;IACxBK,IAAI,EAAE;MAAEC,KAAK,EAAE,QAAQ;MAAEC,YAAY,EAAE;IAAK;EAC9C,CAAC;AAEL,CAAC,CACF;AAED,MAAME,MAAM,GAAGhB,YAAY,CAAC;EAC1BiB,OAAO,EAAEhB,gBAAgB,CAAC,CAAC;EAC3BO;AACF,CAAC,CAAC;;AAEF;AACAQ,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACA,IAAIF,EAAE,CAACP,IAAI,CAACC,KAAK,EAAE;IACjBS,QAAQ,CAACT,KAAK,GAAGM,EAAE,CAACP,IAAI,CAACC,KAAK;EAChC;;EAEA;EACA,IAAIM,EAAE,CAACI,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACb,IAAI,CAACE,YAAY,CAAC,EAAE;IACvD;IACA,MAAMY,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACtD,IAAI,CAACF,UAAU,EAAE;MACf;MACAL,IAAI,CAAC;QAAEX,IAAI,EAAE;MAAQ,CAAC,CAAC;IACzB,CAAC,MAAM;MACLW,IAAI,CAAC,CAAC,EAAC;IACT;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC,EAAC;EACT;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}