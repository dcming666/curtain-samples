{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { defineStore } from 'pinia';\nexport const useCurtainStore = defineStore('curtain', {\n  state: () => ({\n    curtains: [],\n    categories: [],\n    currentCurtain: null,\n    loading: false,\n    error: null\n  }),\n  actions: {\n    // 获取所有窗帘样本\n    async fetchCurtains() {\n      this.loading = true;\n      try {\n        const response = await fetch('/data/curtains.json');\n        const data = await response.json();\n        this.curtains = data.curtains;\n        this.error = null;\n      } catch (err) {\n        this.error = '获取窗帘样本失败: ' + err.message;\n        console.error('获取窗帘样本失败:', err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 获取单个窗帘样本详情\n    async fetchCurtainById(id) {\n      this.loading = true;\n      try {\n        const response = await fetch('/data/curtains.json');\n        const data = await response.json();\n        this.currentCurtain = data.curtains.find(c => c.id === id);\n        this.error = null;\n      } catch (err) {\n        this.error = '获取窗帘样本详情失败: ' + err.message;\n        console.error('获取窗帘样本详情失败:', err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 获取所有分类\n    async fetchCategories() {\n      this.loading = true;\n      try {\n        const response = await fetch('/data/curtains.json');\n        const data = await response.json();\n        this.categories = data.categories;\n        this.error = null;\n      } catch (err) {\n        this.error = '获取分类失败: ' + err.message;\n        console.error('获取分类失败:', err);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","useCurtainStore","state","curtains","categories","currentCurtain","loading","error","actions","fetchCurtains","response","fetch","data","json","err","message","console","fetchCurtainById","id","find","c","fetchCategories"],"sources":["C:/Users/Firebat/Desktop/curtain/frontend/frontend-app/src/stores/index.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\n\r\nexport const useCurtainStore = defineStore('curtain', {\r\n  state: () => ({\r\n    curtains: [],\r\n    categories: [],\r\n    currentCurtain: null,\r\n    loading: false,\r\n    error: null\r\n  }),\r\n  \r\n  actions: {\r\n    // 获取所有窗帘样本\r\n    async fetchCurtains() {\r\n      this.loading = true\r\n      try {\r\n        const response = await fetch('/data/curtains.json')\r\n        const data = await response.json()\r\n        this.curtains = data.curtains\r\n        this.error = null\r\n      } catch (err) {\r\n        this.error = '获取窗帘样本失败: ' + err.message\r\n        console.error('获取窗帘样本失败:', err)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n\r\n    // 获取单个窗帘样本详情\r\n    async fetchCurtainById(id) {\r\n      this.loading = true\r\n      try {\r\n        const response = await fetch('/data/curtains.json')\r\n        const data = await response.json()\r\n        this.currentCurtain = data.curtains.find(c => c.id === id)\r\n        this.error = null\r\n      } catch (err) {\r\n        this.error = '获取窗帘样本详情失败: ' + err.message\r\n        console.error('获取窗帘样本详情失败:', err)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n\r\n    // 获取所有分类\r\n    async fetchCategories() {\r\n      this.loading = true\r\n      try {\r\n        const response = await fetch('/data/curtains.json')\r\n        const data = await response.json()\r\n        this.categories = data.categories\r\n        this.error = null\r\n      } catch (err) {\r\n        this.error = '获取分类失败: ' + err.message\r\n        console.error('获取分类失败:', err)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n})"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAO,MAAMC,eAAe,GAAGD,WAAW,CAAC,SAAS,EAAE;EACpDE,KAAK,EAAEA,CAAA,MAAO;IACZC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,cAAc,EAAE,IAAI;IACpBC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC,CAAC;EAEFC,OAAO,EAAE;IACP;IACA,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI,CAACH,OAAO,GAAG,IAAI;MACnB,IAAI;QACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqB,CAAC;QACnD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAI,CAACV,QAAQ,GAAGS,IAAI,CAACT,QAAQ;QAC7B,IAAI,CAACI,KAAK,GAAG,IAAI;MACnB,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZ,IAAI,CAACP,KAAK,GAAG,YAAY,GAAGO,GAAG,CAACC,OAAO;QACvCC,OAAO,CAACT,KAAK,CAAC,WAAW,EAAEO,GAAG,CAAC;MACjC,CAAC,SAAS;QACR,IAAI,CAACR,OAAO,GAAG,KAAK;MACtB;IACF,CAAC;IAED;IACA,MAAMW,gBAAgBA,CAACC,EAAE,EAAE;MACzB,IAAI,CAACZ,OAAO,GAAG,IAAI;MACnB,IAAI;QACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqB,CAAC;QACnD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAI,CAACR,cAAc,GAAGO,IAAI,CAACT,QAAQ,CAACgB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACF,EAAE,KAAKA,EAAE,CAAC;QAC1D,IAAI,CAACX,KAAK,GAAG,IAAI;MACnB,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZ,IAAI,CAACP,KAAK,GAAG,cAAc,GAAGO,GAAG,CAACC,OAAO;QACzCC,OAAO,CAACT,KAAK,CAAC,aAAa,EAAEO,GAAG,CAAC;MACnC,CAAC,SAAS;QACR,IAAI,CAACR,OAAO,GAAG,KAAK;MACtB;IACF,CAAC;IAED;IACA,MAAMe,eAAeA,CAAA,EAAG;MACtB,IAAI,CAACf,OAAO,GAAG,IAAI;MACnB,IAAI;QACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqB,CAAC;QACnD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAI,CAACT,UAAU,GAAGQ,IAAI,CAACR,UAAU;QACjC,IAAI,CAACG,KAAK,GAAG,IAAI;MACnB,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZ,IAAI,CAACP,KAAK,GAAG,UAAU,GAAGO,GAAG,CAACC,OAAO;QACrCC,OAAO,CAACT,KAAK,CAAC,SAAS,EAAEO,GAAG,CAAC;MAC/B,CAAC,SAAS;QACR,IAAI,CAACR,OAAO,GAAG,KAAK;MACtB;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}