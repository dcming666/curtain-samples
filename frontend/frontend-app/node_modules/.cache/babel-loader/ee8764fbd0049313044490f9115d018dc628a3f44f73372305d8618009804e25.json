{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useAuthStore } from '../../stores';\nexport default {\n  name: 'Login',\n  setup() {\n    const router = useRouter();\n    const authStore = useAuthStore();\n    const loginFormRef = ref(null);\n\n    // 登录表单数据\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    });\n\n    // 表单验证规则\n    const loginRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 20,\n        message: '用户名长度应为3-20个字符',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        message: '密码长度不能少于6个字符',\n        trigger: 'blur'\n      }]\n    };\n\n    // 处理登录\n    const handleLogin = async () => {\n      if (!loginFormRef.value) return;\n      await loginFormRef.value.validate(async valid => {\n        if (valid) {\n          const success = await authStore.login(loginForm);\n          if (success) {\n            // 登录成功，跳转到管理后台\n            router.push({\n              name: 'Admin'\n            });\n          }\n        }\n      });\n    };\n    return {\n      loginForm,\n      loginRules,\n      loginFormRef,\n      authStore,\n      handleLogin\n    };\n  }\n};","map":{"version":3,"names":["reactive","ref","useRouter","useAuthStore","name","setup","router","authStore","loginFormRef","loginForm","username","password","loginRules","required","message","trigger","min","max","handleLogin","value","validate","valid","success","login","push"],"sources":["C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\views\\admin\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <template #header>\r\n        <div class=\"login-header\">\r\n          <h2>管理员登录</h2>\r\n          <p>窗帘样本管理系统</p>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-form \r\n        ref=\"loginFormRef\" \r\n        :model=\"loginForm\" \r\n        :rules=\"loginRules\" \r\n        label-position=\"top\"\r\n        @submit.prevent=\"handleLogin\"\r\n      >\r\n        <!-- 用户名输入框 -->\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input \r\n            v-model=\"loginForm.username\" \r\n            prefix-icon=\"el-icon-user\"\r\n            placeholder=\"请输入管理员用户名\"\r\n            clearable\r\n          />\r\n        </el-form-item>\r\n        \r\n        <!-- 密码输入框 -->\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input \r\n            v-model=\"loginForm.password\" \r\n            prefix-icon=\"el-icon-lock\"\r\n            type=\"password\"\r\n            placeholder=\"请输入密码\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n        \r\n        <!-- 错误信息提示 -->\r\n        <div v-if=\"authStore.error\" class=\"login-error\">\r\n          <el-alert :title=\"authStore.error\" type=\"error\" show-icon />\r\n        </div>\r\n        \r\n        <!-- 登录按钮 -->\r\n        <el-form-item>\r\n          <el-button \r\n            type=\"primary\" \r\n            native-type=\"submit\" \r\n            :loading=\"authStore.loading\"\r\n            class=\"login-button\"\r\n          >\r\n            登录\r\n          </el-button>\r\n        </el-form-item>\r\n        \r\n        <!-- 返回前台链接 -->\r\n        <div class=\"back-to-home\">\r\n          <router-link :to=\"{name: 'Home'}\">返回前台首页</router-link>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { useAuthStore } from '../../stores'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  setup() {\r\n    const router = useRouter()\r\n    const authStore = useAuthStore()\r\n    const loginFormRef = ref(null)\r\n    \r\n    // 登录表单数据\r\n    const loginForm = reactive({\r\n      username: '',\r\n      password: ''\r\n    })\r\n    \r\n    // 表单验证规则\r\n    const loginRules = {\r\n      username: [\r\n        { required: true, message: '请输入用户名', trigger: 'blur' },\r\n        { min: 3, max: 20, message: '用户名长度应为3-20个字符', trigger: 'blur' }\r\n      ],\r\n      password: [\r\n        { required: true, message: '请输入密码', trigger: 'blur' },\r\n        { min: 6, message: '密码长度不能少于6个字符', trigger: 'blur' }\r\n      ]\r\n    }\r\n    \r\n    // 处理登录\r\n    const handleLogin = async () => {\r\n      if (!loginFormRef.value) return\r\n      \r\n      await loginFormRef.value.validate(async (valid) => {\r\n        if (valid) {\r\n          const success = await authStore.login(loginForm)\r\n          if (success) {\r\n            // 登录成功，跳转到管理后台\r\n            router.push({ name: 'Admin' })\r\n          }\r\n        }\r\n      })\r\n    }\r\n    \r\n    return {\r\n      loginForm,\r\n      loginRules,\r\n      loginFormRef,\r\n      authStore,\r\n      handleLogin\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.login-card {\r\n  width: 400px;\r\n  max-width: 90%;\r\n}\r\n\r\n.login-header {\r\n  text-align: center;\r\n}\r\n\r\n.login-header h2 {\r\n  margin: 0;\r\n  font-size: 1.8rem;\r\n  color: #2c3e50;\r\n}\r\n\r\n.login-header p {\r\n  margin: 5px 0 0;\r\n  color: #7f8c8d;\r\n  font-size: 1rem;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n\r\n.login-error {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.back-to-home {\r\n  text-align: center;\r\n  margin-top: 15px;\r\n}\r\n\r\n.back-to-home a {\r\n  color: #409eff;\r\n  text-decoration: none;\r\n}\r\n\r\n.back-to-home a:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>"],"mappings":";AAiEA,SAASA,QAAQ,EAAEC,GAAE,QAAS,KAAI;AAClC,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,YAAW,QAAS,cAAa;AAE1C,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIJ,SAAS,CAAC;IACzB,MAAMK,SAAQ,GAAIJ,YAAY,CAAC;IAC/B,MAAMK,YAAW,GAAIP,GAAG,CAAC,IAAI;;IAE7B;IACA,MAAMQ,SAAQ,GAAIT,QAAQ,CAAC;MACzBU,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;;IAED;IACA,MAAMC,UAAS,GAAI;MACjBF,QAAQ,EAAE,CACR;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,EACtD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEH,OAAO,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAO,EAC/D;MACDJ,QAAQ,EAAE,CACR;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,EACrD;QAAEC,GAAG,EAAE,CAAC;QAAEF,OAAO,EAAE,cAAc;QAAEC,OAAO,EAAE;MAAO;IAEvD;;IAEA;IACA,MAAMG,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI,CAACV,YAAY,CAACW,KAAK,EAAE;MAEzB,MAAMX,YAAY,CAACW,KAAK,CAACC,QAAQ,CAAC,MAAOC,KAAK,IAAK;QACjD,IAAIA,KAAK,EAAE;UACT,MAAMC,OAAM,GAAI,MAAMf,SAAS,CAACgB,KAAK,CAACd,SAAS;UAC/C,IAAIa,OAAO,EAAE;YACX;YACAhB,MAAM,CAACkB,IAAI,CAAC;cAAEpB,IAAI,EAAE;YAAQ,CAAC;UAC/B;QACF;MACF,CAAC;IACH;IAEA,OAAO;MACLK,SAAS;MACTG,UAAU;MACVJ,YAAY;MACZD,SAAS;MACTW;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}