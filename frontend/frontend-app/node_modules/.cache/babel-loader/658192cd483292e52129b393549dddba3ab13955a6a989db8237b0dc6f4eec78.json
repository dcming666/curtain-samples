{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { ref, reactive, onMounted, computed } from 'vue';\nimport { useCurtainStore } from '../../stores';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'CurtainManage',\n  setup() {\n    const curtainStore = useCurtainStore();\n    const curtainFormRef = ref(null);\n    const dialogVisible = ref(false);\n    const dialogType = ref('add'); // 'add' 或 'edit'\n    const submitLoading = ref(false);\n    const tableLoading = ref(false);\n    const imageUrl = ref('');\n    const imageFile = ref(null);\n\n    // 筛选表单\n    const filterForm = reactive({\n      name: '',\n      category_id: '',\n      in_stock: ''\n    });\n\n    // 窗帘样本表单\n    const curtainForm = reactive({\n      id: null,\n      name: '',\n      category_id: '',\n      price: 0,\n      material: '',\n      width: '',\n      pattern: '',\n      style: '',\n      features: '',\n      description: '',\n      in_stock: true,\n      is_new: false\n    });\n\n    // 表单验证规则\n    const curtainRules = {\n      name: [{\n        required: true,\n        message: '请输入窗帘样本名称',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 50,\n        message: '长度应为2-50个字符',\n        trigger: 'blur'\n      }],\n      category_id: [{\n        required: true,\n        message: '请选择分类',\n        trigger: 'change'\n      }],\n      description: [{\n        required: true,\n        message: '请输入窗帘样本描述',\n        trigger: 'blur'\n      }]\n    };\n\n    // 初始化数据\n    onMounted(async () => {\n      // 获取分类列表\n      if (!curtainStore.categories.length) {\n        await curtainStore.fetchCategories();\n      }\n      // 获取窗帘样本列表\n      await curtainStore.fetchCurtains();\n    });\n\n    // 显示添加对话框\n    const showAddDialog = () => {\n      dialogType.value = 'add';\n      resetForm();\n      dialogVisible.value = true;\n    };\n\n    // 显示编辑对话框\n    const showEditDialog = row => {\n      dialogType.value = 'edit';\n      resetForm();\n\n      // 填充表单数据\n      Object.keys(curtainForm).forEach(key => {\n        if (key in row) {\n          curtainForm[key] = row[key];\n        }\n      });\n\n      // 设置图片预览\n      if (row.image_url) {\n        imageUrl.value = row.image_url;\n      }\n      dialogVisible.value = true;\n    };\n\n    // 重置表单\n    const resetForm = () => {\n      if (curtainFormRef.value) {\n        curtainFormRef.value.resetFields();\n      }\n\n      // 重置表单数据\n      Object.assign(curtainForm, {\n        id: null,\n        name: '',\n        category_id: '',\n        price: 0,\n        material: '',\n        width: '',\n        pattern: '',\n        style: '',\n        features: '',\n        description: '',\n        in_stock: true,\n        is_new: false\n      });\n\n      // 清除图片\n      imageUrl.value = '';\n      imageFile.value = null;\n    };\n\n    // 图片上传前的验证\n    const beforeImageUpload = file => {\n      const isImage = file.type.startsWith('image/');\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isImage) {\n        ElMessage.error('只能上传图片文件!');\n        return false;\n      }\n      if (!isLt2M) {\n        ElMessage.error('图片大小不能超过2MB!');\n        return false;\n      }\n      return true;\n    };\n\n    // 处理图片上传\n    const handleImageUpload = options => {\n      const file = options.file;\n      imageFile.value = file;\n\n      // 创建本地预览URL\n      const reader = new FileReader();\n      reader.onload = e => {\n        imageUrl.value = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    };\n\n    // 提交表单\n    const handleSubmit = async () => {\n      if (!curtainFormRef.value) return;\n      await curtainFormRef.value.validate(async valid => {\n        if (valid) {\n          submitLoading.value = true;\n          try {\n            // 创建FormData对象\n            const formData = new FormData();\n\n            // 添加表单字段\n            Object.keys(curtainForm).forEach(key => {\n              if (key !== 'id') {\n                formData.append(key, curtainForm[key]);\n              }\n            });\n\n            // 添加图片文件（如果有）\n            if (imageFile.value) {\n              formData.append('image', imageFile.value);\n            }\n\n            // 根据对话框类型执行添加或更新操作\n            if (dialogType.value === 'add') {\n              await curtainStore.addCurtain(formData);\n              ElMessage.success('添加窗帘样本成功');\n            } else {\n              await curtainStore.updateCurtain(curtainForm.id, formData);\n              ElMessage.success('更新窗帘样本成功');\n            }\n\n            // 关闭对话框并重置表单\n            dialogVisible.value = false;\n            resetForm();\n          } catch (error) {\n            ElMessage.error(error.message || '操作失败');\n          } finally {\n            submitLoading.value = false;\n          }\n        }\n      });\n    };\n\n    // 处理删除\n    const handleDelete = async id => {\n      try {\n        tableLoading.value = true;\n        await curtainStore.deleteCurtain(id);\n        ElMessage.success('删除窗帘样本成功');\n      } catch (error) {\n        ElMessage.error(error.message || '删除失败');\n      } finally {\n        tableLoading.value = false;\n      }\n    };\n\n    // 处理筛选\n    const handleFilter = async () => {\n      // 这里简化处理，实际应该调用API进行筛选\n      // 在真实环境中，应该将筛选条件传递给后端API\n      tableLoading.value = true;\n      try {\n        await curtainStore.fetchCurtains();\n        // 前端筛选（临时方案）\n        if (filterForm.name) {\n          curtainStore.curtains = curtainStore.curtains.filter(item => item.name.toLowerCase().includes(filterForm.name.toLowerCase()));\n        }\n        if (filterForm.category_id) {\n          curtainStore.curtains = curtainStore.curtains.filter(item => item.category_id === filterForm.category_id);\n        }\n        if (filterForm.in_stock !== '') {\n          curtainStore.curtains = curtainStore.curtains.filter(item => item.in_stock === filterForm.in_stock);\n        }\n      } catch (error) {\n        ElMessage.error('筛选失败: ' + error.message);\n      } finally {\n        tableLoading.value = false;\n      }\n    };\n\n    // 重置筛选\n    const resetFilter = () => {\n      Object.assign(filterForm, {\n        name: '',\n        category_id: '',\n        in_stock: ''\n      });\n      curtainStore.fetchCurtains();\n    };\n    return {\n      curtainStore,\n      curtainForm,\n      curtainRules,\n      curtainFormRef,\n      dialogVisible,\n      dialogType,\n      submitLoading,\n      tableLoading,\n      imageUrl,\n      filterForm,\n      showAddDialog,\n      showEditDialog,\n      handleSubmit,\n      handleDelete,\n      handleFilter,\n      resetFilter,\n      beforeImageUpload,\n      handleImageUpload\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","useCurtainStore","ElMessage","name","setup","curtainStore","curtainFormRef","dialogVisible","dialogType","submitLoading","tableLoading","imageUrl","imageFile","filterForm","category_id","in_stock","curtainForm","id","price","material","width","pattern","style","features","description","is_new","curtainRules","required","message","trigger","min","max","categories","length","fetchCategories","fetchCurtains","showAddDialog","value","resetForm","showEditDialog","row","Object","keys","forEach","key","image_url","resetFields","assign","beforeImageUpload","file","isImage","type","startsWith","isLt2M","size","error","handleImageUpload","options","reader","FileReader","onload","e","target","result","readAsDataURL","handleSubmit","validate","valid","formData","FormData","append","addCurtain","success","updateCurtain","handleDelete","deleteCurtain","handleFilter","curtains","filter","item","toLowerCase","includes","resetFilter"],"sources":["C:\\Users\\Firebat\\Desktop\\curtain\\frontend\\frontend-app\\src\\views\\admin\\CurtainManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"curtain-manage-container\">\r\n    <div class=\"page-header\">\r\n      <h2>窗帘样本管理</h2>\r\n      <el-button type=\"primary\" @click=\"showAddDialog\">添加新样本</el-button>\r\n    </div>\r\n    \r\n    <!-- 搜索和筛选区域 -->\r\n    <el-card class=\"filter-card\">\r\n      <el-form :inline=\"true\" :model=\"filterForm\" class=\"filter-form\">\r\n        <el-form-item label=\"样本名称\">\r\n          <el-input v-model=\"filterForm.name\" placeholder=\"输入名称关键词\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\">\r\n          <el-select v-model=\"filterForm.category_id\" placeholder=\"选择分类\" clearable>\r\n            <el-option \r\n              v-for=\"category in curtainStore.categories\" \r\n              :key=\"category.id\" \r\n              :label=\"category.name\" \r\n              :value=\"category.id\" \r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"库存状态\">\r\n          <el-select v-model=\"filterForm.in_stock\" placeholder=\"库存状态\" clearable>\r\n            <el-option label=\"有库存\" :value=\"true\" />\r\n            <el-option label=\"缺货\" :value=\"false\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleFilter\">搜索</el-button>\r\n          <el-button @click=\"resetFilter\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n    \r\n    <!-- 数据表格 -->\r\n    <el-card class=\"table-card\">\r\n      <div v-if=\"curtainStore.loading\" class=\"loading-container\">\r\n        <el-skeleton :rows=\"10\" animated />\r\n      </div>\r\n      <div v-else-if=\"curtainStore.error\" class=\"error-message\">\r\n        <el-alert :title=\"curtainStore.error\" type=\"error\" show-icon />\r\n      </div>\r\n      <div v-else>\r\n        <el-table \r\n          :data=\"curtainStore.curtains\" \r\n          border \r\n          style=\"width: 100%\"\r\n          v-loading=\"tableLoading\"\r\n        >\r\n          <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n          <el-table-column label=\"图片\" width=\"120\">\r\n            <template #default=\"{row}\">\r\n              <el-image \r\n                :src=\"row.image_url\" \r\n                style=\"width: 80px; height: 80px\"\r\n                fit=\"cover\"\r\n                :preview-src-list=\"[row.image_url]\"\r\n              >\r\n                <template #error>\r\n                  <div class=\"image-error\">\r\n                    <el-icon><picture-failed /></el-icon>\r\n                  </div>\r\n                </template>\r\n              </el-image>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"name\" label=\"名称\" />\r\n          <el-table-column prop=\"category_name\" label=\"分类\" width=\"120\" />\r\n          <el-table-column label=\"库存状态\" width=\"100\">\r\n            <template #default=\"{row}\">\r\n              <el-tag :type=\"row.in_stock ? 'success' : 'danger'\">\r\n                {{ row.in_stock ? '有库存' : '缺货' }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"新品\" width=\"80\">\r\n            <template #default=\"{row}\">\r\n              <el-tag v-if=\"row.is_new\" type=\"warning\">新品</el-tag>\r\n              <span v-else>-</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" width=\"200\">\r\n            <template #default=\"{row}\">\r\n              <el-button size=\"small\" @click=\"showEditDialog(row)\">编辑</el-button>\r\n              <el-popconfirm \r\n                title=\"确定要删除这个窗帘样本吗？\" \r\n                @confirm=\"handleDelete(row.id)\"\r\n              >\r\n                <template #reference>\r\n                  <el-button size=\"small\" type=\"danger\">删除</el-button>\r\n                </template>\r\n              </el-popconfirm>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </el-card>\r\n    \r\n    <!-- 添加/编辑对话框 -->\r\n    <el-dialog \r\n      :title=\"dialogType === 'add' ? '添加窗帘样本' : '编辑窗帘样本'\" \r\n      v-model=\"dialogVisible\"\r\n      width=\"600px\"\r\n    >\r\n      <el-form \r\n        ref=\"curtainFormRef\" \r\n        :model=\"curtainForm\" \r\n        :rules=\"curtainRules\" \r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"样本名称\" prop=\"name\">\r\n          <el-input v-model=\"curtainForm.name\" placeholder=\"请输入窗帘样本名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\" prop=\"category_id\">\r\n          <el-select v-model=\"curtainForm.category_id\" placeholder=\"请选择分类\">\r\n            <el-option \r\n              v-for=\"category in curtainStore.categories\" \r\n              :key=\"category.id\" \r\n              :label=\"category.name\" \r\n              :value=\"category.id\" \r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"样本图片\" prop=\"image\">\r\n          <el-upload\r\n            class=\"image-upload\"\r\n            action=\"#\"\r\n            :http-request=\"handleImageUpload\"\r\n            :show-file-list=\"false\"\r\n            :before-upload=\"beforeImageUpload\"\r\n          >\r\n            <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"preview-image\" />\r\n            <el-icon v-else class=\"upload-icon\"><plus /></el-icon>\r\n            <div class=\"upload-text\">点击上传图片</div>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\" prop=\"price\">\r\n          <el-input-number v-model=\"curtainForm.price\" :precision=\"2\" :step=\"10\" :min=\"0\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"材质\" prop=\"material\">\r\n          <el-input v-model=\"curtainForm.material\" placeholder=\"请输入窗帘材质\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"宽度\" prop=\"width\">\r\n          <el-input v-model=\"curtainForm.width\" placeholder=\"请输入窗帘宽度\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"图案\" prop=\"pattern\">\r\n          <el-input v-model=\"curtainForm.pattern\" placeholder=\"请输入窗帘图案\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"风格\" prop=\"style\">\r\n          <el-input v-model=\"curtainForm.style\" placeholder=\"请输入窗帘风格\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"功能\" prop=\"features\">\r\n          <el-input v-model=\"curtainForm.features\" placeholder=\"请输入窗帘功能特点\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\" prop=\"description\">\r\n          <el-input \r\n            v-model=\"curtainForm.description\" \r\n            type=\"textarea\" \r\n            :rows=\"4\" \r\n            placeholder=\"请输入窗帘样本描述\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"库存状态\" prop=\"in_stock\">\r\n          <el-switch v-model=\"curtainForm.in_stock\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"新品\" prop=\"is_new\">\r\n          <el-switch v-model=\"curtainForm.is_new\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitLoading\">确定</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, computed } from 'vue'\r\nimport { useCurtainStore } from '../../stores'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'CurtainManage',\r\n  setup() {\r\n    const curtainStore = useCurtainStore()\r\n    const curtainFormRef = ref(null)\r\n    const dialogVisible = ref(false)\r\n    const dialogType = ref('add') // 'add' 或 'edit'\r\n    const submitLoading = ref(false)\r\n    const tableLoading = ref(false)\r\n    const imageUrl = ref('')\r\n    const imageFile = ref(null)\r\n    \r\n    // 筛选表单\r\n    const filterForm = reactive({\r\n      name: '',\r\n      category_id: '',\r\n      in_stock: ''\r\n    })\r\n    \r\n    // 窗帘样本表单\r\n    const curtainForm = reactive({\r\n      id: null,\r\n      name: '',\r\n      category_id: '',\r\n      price: 0,\r\n      material: '',\r\n      width: '',\r\n      pattern: '',\r\n      style: '',\r\n      features: '',\r\n      description: '',\r\n      in_stock: true,\r\n      is_new: false\r\n    })\r\n    \r\n    // 表单验证规则\r\n    const curtainRules = {\r\n      name: [\r\n        { required: true, message: '请输入窗帘样本名称', trigger: 'blur' },\r\n        { min: 2, max: 50, message: '长度应为2-50个字符', trigger: 'blur' }\r\n      ],\r\n      category_id: [\r\n        { required: true, message: '请选择分类', trigger: 'change' }\r\n      ],\r\n      description: [\r\n        { required: true, message: '请输入窗帘样本描述', trigger: 'blur' }\r\n      ]\r\n    }\r\n    \r\n    // 初始化数据\r\n    onMounted(async () => {\r\n      // 获取分类列表\r\n      if (!curtainStore.categories.length) {\r\n        await curtainStore.fetchCategories()\r\n      }\r\n      // 获取窗帘样本列表\r\n      await curtainStore.fetchCurtains()\r\n    })\r\n    \r\n    // 显示添加对话框\r\n    const showAddDialog = () => {\r\n      dialogType.value = 'add'\r\n      resetForm()\r\n      dialogVisible.value = true\r\n    }\r\n    \r\n    // 显示编辑对话框\r\n    const showEditDialog = (row) => {\r\n      dialogType.value = 'edit'\r\n      resetForm()\r\n      \r\n      // 填充表单数据\r\n      Object.keys(curtainForm).forEach(key => {\r\n        if (key in row) {\r\n          curtainForm[key] = row[key]\r\n        }\r\n      })\r\n      \r\n      // 设置图片预览\r\n      if (row.image_url) {\r\n        imageUrl.value = row.image_url\r\n      }\r\n      \r\n      dialogVisible.value = true\r\n    }\r\n    \r\n    // 重置表单\r\n    const resetForm = () => {\r\n      if (curtainFormRef.value) {\r\n        curtainFormRef.value.resetFields()\r\n      }\r\n      \r\n      // 重置表单数据\r\n      Object.assign(curtainForm, {\r\n        id: null,\r\n        name: '',\r\n        category_id: '',\r\n        price: 0,\r\n        material: '',\r\n        width: '',\r\n        pattern: '',\r\n        style: '',\r\n        features: '',\r\n        description: '',\r\n        in_stock: true,\r\n        is_new: false\r\n      })\r\n      \r\n      // 清除图片\r\n      imageUrl.value = ''\r\n      imageFile.value = null\r\n    }\r\n    \r\n    // 图片上传前的验证\r\n    const beforeImageUpload = (file) => {\r\n      const isImage = file.type.startsWith('image/')\r\n      const isLt2M = file.size / 1024 / 1024 < 2\r\n      \r\n      if (!isImage) {\r\n        ElMessage.error('只能上传图片文件!')\r\n        return false\r\n      }\r\n      if (!isLt2M) {\r\n        ElMessage.error('图片大小不能超过2MB!')\r\n        return false\r\n      }\r\n      \r\n      return true\r\n    }\r\n    \r\n    // 处理图片上传\r\n    const handleImageUpload = (options) => {\r\n      const file = options.file\r\n      imageFile.value = file\r\n      \r\n      // 创建本地预览URL\r\n      const reader = new FileReader()\r\n      reader.onload = (e) => {\r\n        imageUrl.value = e.target.result\r\n      }\r\n      reader.readAsDataURL(file)\r\n    }\r\n    \r\n    // 提交表单\r\n    const handleSubmit = async () => {\r\n      if (!curtainFormRef.value) return\r\n      \r\n      await curtainFormRef.value.validate(async (valid) => {\r\n        if (valid) {\r\n          submitLoading.value = true\r\n          \r\n          try {\r\n            // 创建FormData对象\r\n            const formData = new FormData()\r\n            \r\n            // 添加表单字段\r\n            Object.keys(curtainForm).forEach(key => {\r\n              if (key !== 'id') {\r\n                formData.append(key, curtainForm[key])\r\n              }\r\n            })\r\n            \r\n            // 添加图片文件（如果有）\r\n            if (imageFile.value) {\r\n              formData.append('image', imageFile.value)\r\n            }\r\n            \r\n            // 根据对话框类型执行添加或更新操作\r\n            if (dialogType.value === 'add') {\r\n              await curtainStore.addCurtain(formData)\r\n              ElMessage.success('添加窗帘样本成功')\r\n            } else {\r\n              await curtainStore.updateCurtain(curtainForm.id, formData)\r\n              ElMessage.success('更新窗帘样本成功')\r\n            }\r\n            \r\n            // 关闭对话框并重置表单\r\n            dialogVisible.value = false\r\n            resetForm()\r\n          } catch (error) {\r\n            ElMessage.error(error.message || '操作失败')\r\n          } finally {\r\n            submitLoading.value = false\r\n          }\r\n        }\r\n      })\r\n    }\r\n    \r\n    // 处理删除\r\n    const handleDelete = async (id) => {\r\n      try {\r\n        tableLoading.value = true\r\n        await curtainStore.deleteCurtain(id)\r\n        ElMessage.success('删除窗帘样本成功')\r\n      } catch (error) {\r\n        ElMessage.error(error.message || '删除失败')\r\n      } finally {\r\n        tableLoading.value = false\r\n      }\r\n    }\r\n    \r\n    // 处理筛选\r\n    const handleFilter = async () => {\r\n      // 这里简化处理，实际应该调用API进行筛选\r\n      // 在真实环境中，应该将筛选条件传递给后端API\r\n      tableLoading.value = true\r\n      try {\r\n        await curtainStore.fetchCurtains()\r\n        // 前端筛选（临时方案）\r\n        if (filterForm.name) {\r\n          curtainStore.curtains = curtainStore.curtains.filter(item => \r\n            item.name.toLowerCase().includes(filterForm.name.toLowerCase())\r\n          )\r\n        }\r\n        if (filterForm.category_id) {\r\n          curtainStore.curtains = curtainStore.curtains.filter(item => \r\n            item.category_id === filterForm.category_id\r\n          )\r\n        }\r\n        if (filterForm.in_stock !== '') {\r\n          curtainStore.curtains = curtainStore.curtains.filter(item => \r\n            item.in_stock === filterForm.in_stock\r\n          )\r\n        }\r\n      } catch (error) {\r\n        ElMessage.error('筛选失败: ' + error.message)\r\n      } finally {\r\n        tableLoading.value = false\r\n      }\r\n    }\r\n    \r\n    // 重置筛选\r\n    const resetFilter = () => {\r\n      Object.assign(filterForm, {\r\n        name: '',\r\n        category_id: '',\r\n        in_stock: ''\r\n      })\r\n      curtainStore.fetchCurtains()\r\n    }\r\n    \r\n    return {\r\n      curtainStore,\r\n      curtainForm,\r\n      curtainRules,\r\n      curtainFormRef,\r\n      dialogVisible,\r\n      dialogType,\r\n      submitLoading,\r\n      tableLoading,\r\n      imageUrl,\r\n      filterForm,\r\n      showAddDialog,\r\n      showEditDialog,\r\n      handleSubmit,\r\n      handleDelete,\r\n      handleFilter,\r\n      resetFilter,\r\n      beforeImageUpload,\r\n      handleImageUpload\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.curtain-manage-container {\r\n  padding: 20px;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-form {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.table-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.image-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 178px;\r\n  height: 178px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.image-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.preview-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.upload-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n}\r\n\r\n.upload-text {\r\n  color: #8c939d;\r\n  font-size: 14px;\r\n  margin-top: 8px;\r\n}\r\n\r\n.image-error {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  color: #909399;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}